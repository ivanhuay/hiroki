# The version of circle ci platform to use
version: 2.1 

# Collection of jobs to execute
jobs:
  build:
    # Define some environment variables. Note: API tokens, server keys, etc should not be defined here
    environment:
      NODE_ENV: 'test'
    # (Optional) Define directory in which to run the steps. Circle CI defaults it to ~/project if omitted
    working_directory: ~/guidebook
    # Specify the execution environment. Circle CI allows you to run jobs in one of 3 environments - docker, a linux virtual machine or a macOS virtual machine
    docker:
      # Primary container where the job's commands are run
      - image: cimg/base:stable
      # Any additional containers are started in the same network and are able to communicate with the primary container
      - image: mongo:4.1.6-xenial
    # Steps allow you to define a set of executable commands
    steps:
      # Reserved word in Circle CI for checking out your code repository
      - checkout
      - node/install:
        install-yarn: true
        node-version: '16.13'
      # If a cache entry with this key exists, add it to the working directory
      - restore_cache:
          key: v1-dependencies-{{ checksum "package.json" }}

      # Execute a command. The simple for is `run: npm install --verbose`
      - run: 
          # Name attribute provides useful organization information when returning errors, warnings or output
          name: Install project dependencies
          # The command to execute.
          command: npm install --verbose

      # Persist some data to cache which can be used in subsequent builds. 
      # For guidebook, node_modules is cached. This makes subsequent build runs faster if package.json is unchanged
      - save_cache:
          key: v1-dependencies-{{ checksum "package.json"}}
          paths:
            - node_modules
      - run:
          name: Run tests
          # When running Jest tests, please use the --runInBand flag: https://circleci.com/docs/2.0/collect-test-data/#jest
          command: npm test -- --runInBand

# Workflows allow you to define the order of execution of jobs. 
# For a single job, like in this example, the workflows section can be omitted
# Learn [more about workflows](https://circleci.com/docs/2.0/concepts/#section=getting-started){:target="_blank"}
workflows:
  # The workflow version
  version: 2.1
  # A unique name for the workflow
  run_build:
    # The jobs to run in this workflow
    jobs:
      - build